"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var moment = require("moment");
exports.dateAgeKeyword = {
    keyword: "date_age",
    definition: {
        async: false,
        type: "string",
        validate: function (schema, data, parentSchema, dataPath, parentData, parentDataProperty) {
            var _type = schema.type;
            var _unit = schema.unit;
            var _factor = schema.factor;
            if (!_type || typeof _type !== "string" || !(_type === "min" || _type === "max")) {
                console.error("[ValidatorService] INCORRECT_SCHEMA type");
            }
            if (!_unit || typeof _unit !== "string" || !(_type === "year" || _type === "month" || _type === "week")) {
                console.error("[ValidatorService] INCORRECT_SCHEMA unit");
            }
            if (!_factor || typeof _factor !== "number") {
                console.error("[ValidatorService] INCORRECT_SCHEMA factor");
            }
            var diff = moment().diff(data, _unit);
            if (_type === "min") {
                return diff >= _factor;
            }
            else if (_type === "max") {
                return diff <= _factor;
            }
            // Just to make TSLint Happy...
            return false;
        },
        errors: true
    }
};
//# sourceMappingURL=date-age.keyword.js.map