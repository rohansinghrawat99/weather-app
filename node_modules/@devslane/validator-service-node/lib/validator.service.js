"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ajv = require("ajv");
var latitude_keyword_1 = require("./default-keywords/latitude.keyword");
var longitude_keyword_1 = require("./default-keywords/longitude.keyword");
var date_age_keyword_1 = require("./default-keywords/date-age.keyword");
var uuid_keyword_1 = require("./default-keywords/uuid.keyword");
var ValidatorService = /** @class */ (function () {
    function ValidatorService(options) {
        this._ajv = new ajv({ allErrors: true });
        this.BASE_SCHEMA_PATH = options.baseSchemaPath;
        // Default Validators
        this.registerKeywords([
            latitude_keyword_1.latitudeKeyword,
            longitude_keyword_1.longitudeKeyword,
            date_age_keyword_1.dateAgeKeyword,
            uuid_keyword_1.uuidKeyword
        ]);
    }
    ValidatorService.init = function (options) {
        console.info("[ValidatorService] create");
        if (this._instance) {
            // Cannot have multiple instance of this service
            // User IAM Role(s) to authenticate multiple buckets...
            throw "ERR_ValidatorService_LIBRARY_ALREADY_INITIALIZED";
        }
        return new ValidatorService(options);
    };
    ValidatorService.prototype.getBaseSchemaPath = function () {
        return this.BASE_SCHEMA_PATH;
    };
    ValidatorService.prototype.validate = function (schema, data) {
        return this._ajv.validate(schema, data);
    };
    ValidatorService.prototype.formatErrors = function (errors) {
        return errors.map(function (err) {
            return {
                dataPath: err.dataPath,
                params: err.params
            };
        });
    };
    ValidatorService.prototype.getErrors = function () {
        return this.formatErrors(this._ajv.errors || []);
    };
    ValidatorService.prototype.registerKeywords = function (keywords) {
        for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {
            var keyword = keywords_1[_i];
            this._ajv = this._ajv.addKeyword(keyword.keyword, keyword.definition);
        }
    };
    return ValidatorService;
}());
exports.ValidatorService = ValidatorService;
//# sourceMappingURL=validator.service.js.map